name: Lint AsciiDoc

runs:
  using: "composite"
  steps:
    - name: Verify image references
      shell: bash
      run: |
        function err {
          >&2 echo -e "\033[0;31m$@\033[0m"
        }

        rc=0

        while read -r file; do
          echo "Checking $file"

          root=$(grep "^:imagesdir:" "$file" | sed -E "s/^:imagesdir:[[:space:]]*//")
          if [[ ! -z "$root" ]]; then
            if [[ "$root" == /* ]]; then
              root=$(git rev-parse --show-toplevel)$root
            fi
            if [[ ! "$root" == */ ]]; then
              root=$root/
            fi
          fi
          echo "Found imagedir ${root:-<null>}"

          pushd "$(dirname "$file")" > /dev/null

          while read -r location; do
            echo "Checking location $location"

            if [[ "$location" == http* ]]; then
              if ! curl --head --silent --fail "$location" 2>&1 > /dev/null; then
                err "$file references non-existent image $location"
                rc=1
              fi
            else
              if [[ ! -f "$root$location" ]]; then
                err "$file references non-existent image $location with imagedir ${root:-<null>}"
                rc=1
              fi
            fi
          done < <(grep -oE "image:+[^\[]*" "$(basename "$file")" | sed -E "s/^image:+//g")

          popd > /dev/null
        done < <(find . -type f -name "*.adoc")

        exit $rc

    - name: Verify absence of <img> tags
      shell: bash
      run: |
        function err {
          >&2 echo -e "\033[0;31m$@\033[0m"
        }

        rc=0

        while read -r file; do
          echo "Checking $file"

          if grep -q "<img" "$file"; then
            err "$file contains forbidden <img> tags. Use AsciiDoc image macros instead."
          fi
        done < <(find . -type f -name "*.adoc")

        exit $rc
