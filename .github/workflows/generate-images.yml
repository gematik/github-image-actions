# Copyright 2024 gematik GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Generate images

on:
  workflow_call:
    inputs:
      srcdir:
        required: true
        type: string
        description: Relative path to the directory in which to search for .drawio and .puml source files
      outdir:
        required: true
        type: string
        description: Relative path to the directory in which to write the generated output files
      ref:
        required: true
        type: string
        description: The GitHub ref to use for local actions (should normally be the same ref that this workflow is called on)
      png:
        required: false
        default: true
        type: boolean
        description: Whether to generate PNG images from the source files
      svg:
        required: false
        default: true
        type: boolean
        description: Whether to generate SVG images from the source files
      

env:
  DRAWIO_VERSION: 24.2.5
  PLANTUML_VERSION: 1.2024.4

jobs:
  drawio:
    runs-on: ubuntu-latest

    steps:
      - name: Check out calling repository
        uses: actions/checkout@v4

      - name: Check out workflow repository
        uses: actions/checkout@v4
        with:
          repository: gematik/github-image-actions
          ref: ${{ inputs.ref }}
          path: github-image-actions

      - name: Lint draw.io sources
        uses: ./github-image-actions/.github/actions/lint-drawio

      - name: Set up Xvfb & draw.io desktop
        run: |
            wget -q https://github.com/jgraph/drawio-desktop/releases/download/v${{ env.DRAWIO_VERSION }}/drawio-amd64-${{ env.DRAWIO_VERSION }}.deb
            sudo apt-get update
            sudo apt-get install --yes --no-install-recommends xvfb ./drawio-amd64-${{ env.DRAWIO_VERSION }}.deb

      - name: Prepare output folder
        run: |
          rm -rf "${{ inputs.outdir }}"
          mkdir -p "${{ inputs.outdir }}"

      - name: Export draw.io files
        run: |
          # draw.io desktop requires a running X server
          export DISPLAY=:42
          Xvfb :42 -nolisten unix &

          function generate {
            # Nuke everything that's not a draw.io source file so that draw.io desktop doesn't waste time trying to use it as input
            find "${{ inputs.srcdir }}" -not -name "*.drawio" -exec rm -v "{}" \;  

            # The chromium args need to be specified last because of whatever
            drawio --export --recursive --format $1 "${{ inputs.srcdir }}" --no-sandbox --disable-gpu --disable-dev-shm-usage

            rsync -v --recursive --include="*.$1" --filter="-! */" "${{ inputs.srcdir }}"/* "${{ inputs.outdir }}"
          }

          if [[ "${{ inputs.png }}" == "true" ]] ; then
            generate png
          fi

          if [[ "${{ inputs.svg }}" == "true" ]] ; then
            generate svg
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: images-drawio
          path: ${{ inputs.outdir }}/**

  plantuml:
    runs-on: ubuntu-latest

    steps:
      - name: Check out calling repository
        uses: actions/checkout@v4

      - name: Check out workflow repository
        uses: actions/checkout@v4
        with:
          repository: gematik/github-image-actions
          ref: ${{ inputs.ref }}
          path: github-image-actions

      - name: Lint PlantUML sources
        uses: ./github-image-actions/.github/actions/lint-plantuml

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          check-latest: true

      - name: Set up Graphviz
        run: |
            sudo apt-get update
            sudo apt-get install --yes --no-install-recommends graphviz

      - name: Download PlantUML JAR
        run: |
          # Ironically, manually fetching the JAR is faster than installing the Debian plantuml package
          wget -O plantuml.jar "https://github.com/plantuml/plantuml/releases/download/v${{ env.PLANTUML_VERSION }}/plantuml-${{ env.PLANTUML_VERSION }}.jar"

      - name: Prepare output folder
        run: |
          rm -rf "${{ inputs.outdir }}"
          mkdir -p "${{ inputs.outdir }}"

      - name: Export PlantUML files
        run: |
          function generate {
            java -jar plantuml.jar -t$1 -v -nometadata -failfast2 -nbthread auto -o "." "${{ inputs.srcdir }}/**.puml"
            rsync -v --recursive --include="*.$1" --filter="-! */" "${{ inputs.srcdir }}"/* "${{ inputs.outdir }}"
          }

          if [[ "${{ inputs.png }}" == "true" ]] ; then
            generate png
          fi

          if [[ "${{ inputs.svg }}" == "true" ]] ; then
            generate svg
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: images-plantuml
          path: ${{ inputs.outdir }}/**

  commit:
    needs: [drawio, plantuml]
    runs-on: ubuntu-latest

    steps:
      - name: Check out calling repository
        uses: actions/checkout@v4

      - name: Check out workflow repository
        uses: actions/checkout@v4
        with:
          repository: gematik/github-image-actions
          ref: ${{ inputs.ref }}
          path: github-image-actions

      - name: Prepare output folder
        run: |
          rm -rf "${{ inputs.outdir }}"
          mkdir -p "${{ inputs.outdir }}"

      - name: Download draw.io artifact
        uses: actions/download-artifact@v4
        with:
          name: images-drawio
          path: ${{ inputs.outdir }}

      - name: Download PlantUML artifact
        uses: actions/download-artifact@v4
        with:
          name: images-plantuml
          path: ${{ inputs.outdir }}

      - name: Lint AsciiDoc
        uses: ./github-image-actions/.github/actions/lint-asciidoc

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ inputs.outdir }}
          pull: --rebase --autostash
